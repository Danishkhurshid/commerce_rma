<?php

/**
 * @file
 * Contains commerce_rma.module.
 */

use Drupal\commerce_order\Entity\OrderTypeInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\entity\BundleFieldDefinition;
use Drupal\commerce_rma\Entity\RMAType;

/**
 * Implements hook_help().
 */
function commerce_rma_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the commerce_rma module.
    case 'help.page.commerce_rma':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Commerce RMA Drupal 8.x architecture') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function commerce_rma_theme() {
  $theme = [];

  $themes['commerce_rma'] = [
    'render element' => 'children',
  ];

  $theme['commerce_rma_entity'] = [
    'render element' => 'elements',
    'file' => 'commerce_rma_entity.page.inc',
    'template' => 'commerce_rma_entity',
  ];
  $theme['commerce_rma_entity_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'commerce_rma_entity.page.inc',
  ];

  $theme['rma_item'] = [
    'render element' => 'elements',
    'file' => 'rma_item.page.inc',
    'template' => 'rma_item',
  ];

  $theme['rma_item_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'rma_item.page.inc',
  ];

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function commerce_rma_theme_suggestions_rma_item(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#rma_item'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'rma_item__' . $sanitized_view_mode;
  $suggestions[] = 'rma_item__' . $entity->bundle();
  $suggestions[] = 'rma_item__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'rma_item__' . $entity->id();
  $suggestions[] = 'rma_item__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function commerce_rma_theme_suggestions_commerce_rma_entity(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#commerce_rma_entity'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'commerce_rma_entity__' . $sanitized_view_mode;
  $suggestions[] = 'commerce_rma_entity__' . $entity->bundle();
  $suggestions[] = 'commerce_rma_entity__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'commerce_rma_entity__' . $entity->id();
  $suggestions[] = 'commerce_rma_entity__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Adds the default rma_items field to an order type.
 *
 * RMA items can't be a base field because the Views integration is broken.
 * Instead, it is created as a configurable field for each order type.
 *
 * @param \Drupal\commerce_rma\Entity\RMAType $rma_type
 *   The RMA type.
 */
function commerce_rma_add_order_items_field(RMAType $rma_type) {
  $field_definition = BundleFieldDefinition::create('entity_reference')
    ->setTargetEntityTypeId('commerce_rma_entity')
    ->setTargetBundle($rma_type->id())
    ->setName('rma_items')
    ->setLabel('RMA items')
    ->setCardinality(BundleFieldDefinition::CARDINALITY_UNLIMITED)
    ->setRequired(TRUE)
    ->setSetting('target_type', 'commerce_rma_item')
    ->setSetting('handler', 'default')
    ->setDisplayOptions('form', [
      'type' => 'inline_entity_form_complex',
      'weight' => 0,
      'settings' => [
        'override_labels' => TRUE,
        'label_singular' => 'rma item',
        'label_plural' => 'rma items',
      ],
    ])
    ->setDisplayOptions('view', [
      'type' => 'commerce_order_item_table',
      'weight' => 0,
    ]);

  $configurable_field_manager = \Drupal::service('commerce.configurable_field_manager');
  $configurable_field_manager->createField($field_definition);
}
